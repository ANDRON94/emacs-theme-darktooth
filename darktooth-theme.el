;;; darktooth-theme.el --- Color theme for Emacs, when soothe and gruvbox collide

;; Copyright (c) 2015-2016 Jason Milkins (GNU/GPL Licence)

;; Authors: Jason Milkins <jasonm23@gmail.com>
;; URL: http://github.com/emacsfodder/emacs-theme-darktooth
;; Version: 0.2.0

;;; Commentary:
;;  Color theme for Emacs, when soothe and gruvbox collide.

;;; Code:

(unless (>= emacs-major-version 24)
  (error "Requires Emacs 24 or later"))

(defun dt24bit (color)
  "Get 24bit COLOR."
  (plist-get color :24bit))

(defun dt8bit (color)
  "Get 8bit COLOR."
  (plist-get color :8bit))

(deftheme darktooth "Color theme for Emacs, when soothe and gruvbox collide")

(let (
      (darktooth-dark0_hard      '(:24bit "#1D2021" :8bit "color-234"))
      (darktooth-dark0           '(:24bit "#282828" :8bit "color-235"))
      (darktooth-dark0_soft      '(:24bit "#32302F" :8bit "color-236"))
      (darktooth-dark1           '(:24bit "#3C3836" :8bit "color-237"))
      (darktooth-dark2           '(:24bit "#504945" :8bit "color-239"))
      (darktooth-dark3           '(:24bit "#665C54" :8bit "color-241"))
      (darktooth-dark4           '(:24bit "#7C6F64" :8bit "color-243"))

      (darktooth-medium          '(:24bit "#928374" :8bit "color-245")) ;; or 244

      (darktooth-light0_hard     '(:24bit "#FFFFC8" :8bit "color-230"))
      (darktooth-light0          '(:24bit "#FDF4C1" :8bit "color-229"))
      (darktooth-light0_soft     '(:24bit "#F4E8BA" :8bit "color-228"))
      (darktooth-light1          '(:24bit "#EBDBB2" :8bit "color-223"))
      (darktooth-light2          '(:24bit "#D5C4A1" :8bit "color-250"))
      (darktooth-light3          '(:24bit "#BDAE93" :8bit "color-248"))
      (darktooth-light4          '(:24bit "#A89984" :8bit "color-246"))

      (darktooth-bright_red      '(:24bit "#FB4933" :8bit "color-167"))
      (darktooth-bright_green    '(:24bit "#B8BB26" :8bit "color-142"))
      (darktooth-bright_yellow   '(:24bit "#FABD2F" :8bit "color-214"))
      (darktooth-bright_blue     '(:24bit "#83A598" :8bit "color-109"))
      (darktooth-bright_purple   '(:24bit "#D3869B" :8bit "color-175"))
      (darktooth-bright_aqua     '(:24bit "#8EC07C" :8bit "color-108"))
      (darktooth-bright_orange   '(:24bit "#FE8019" :8bit "color-208"))
      (darktooth-bright_cyan     '(:24bit "#3FD7E5" :8bit "color-45"))

      ;; neutral, no 256-color code, requested, nice work-around meanwhile
      (darktooth-neutral_red     '(:24bit "#FB4934" :8bit "#D75F5F"))
      (darktooth-neutral_green   '(:24bit "#B8BB26" :8bit "#AFAF00"))
      (darktooth-neutral_yellow  '(:24bit "#FABD2F" :8bit "#FFAF00"))
      (darktooth-neutral_blue    '(:24bit "#83A598" :8bit "#87AFAF"))
      (darktooth-neutral_purple  '(:24bit "#D3869B" :8bit "#D787AF"))
      (darktooth-neutral_aqua    '(:24bit "#8EC07C" :8bit "#87AF87"))
      (darktooth-neutral_orange  '(:24bit "#FE8019" :8bit "#FF8700"))
      (darktooth-neutral_cyan    '(:24bit "#17CCD5" :8bit "color-80"))

      (darktooth-faded_red       '(:24bit "#9D0006" :8bit "color-88"))
      (darktooth-faded_green     '(:24bit "#79740E" :8bit "color-100"))
      (darktooth-faded_yellow    '(:24bit "#B57614" :8bit "color-136"))
      (darktooth-faded_blue      '(:24bit "#076678" :8bit "color-24"))
      (darktooth-faded_purple    '(:24bit "#8F3F71" :8bit "color-96"))
      (darktooth-faded_aqua      '(:24bit "#427B58" :8bit "color-66"))
      (darktooth-faded_orange    '(:24bit "#AF3A03" :8bit "color-130"))
      (darktooth-faded_cyan      '(:24bit "#00A7AF" :8bit "color-37"))

      (darktooth-dark_red        '(:24bit  "#421E1E" :8bit "color-52"))
      (darktooth-dark_green      '(:24bit  "#2B280F" :8bit "color-22"))
      (darktooth-dark_yellow     '(:24bit  "#4D3B27" :8bit "color-3"))
      (darktooth-dark_blue       '(:24bit  "#2B3C44" :8bit "color-4"))
      (darktooth-dark_purple     '(:24bit  "#4E3D45" :8bit "color-57"))
      (darktooth-dark_aqua       '(:24bit  "#36473A" :8bit "color-23"))
      (darktooth-dark_orange     '(:24bit  "#613620" :8bit "color-130"))
      (darktooth-dark_cyan       '(:24bit  "#205161" :8bit "color-24"))

      (darktooth-mid_red         '(:24bit  "#3F1B1B" :8bit "color-52"))
      (darktooth-mid_green       '(:24bit  "#27321C" :8bit "color-22"))
      (darktooth-mid_yellow      '(:24bit  "#4C3A25" :8bit "color-3"))
      (darktooth-mid_blue        '(:24bit  "#30434C" :8bit "color-4"))
      (darktooth-mid_purple      '(:24bit  "#4C3B43" :8bit "color-57"))
      (darktooth-mid_aqua        '(:24bit  "#394C3D" :8bit "color-23"))
      (darktooth-mid_orange      '(:24bit  "#603000" :8bit "color-130"))
      (darktooth-mid_cyan        '(:24bit  "#005560" :8bit "color-24"))

      (darktooth-delimiter-one   '(:24bit "#5C7E81" :8bit "color-66"))
      (darktooth-delimiter-two   '(:24bit "#837486" :8bit "color-102"))
      (darktooth-delimiter-three '(:24bit "#9C6F68" :8bit "color-94"))
      (darktooth-delimiter-four  '(:24bit "#7B665C" :8bit "color-137"))

      ;; 24 bit has tints from light0 and terminal cycles through
      ;; the 4 darktooth-delimiter colors
      (darktooth-identifiers-1   '(:24bit "#E5D5C5" :8bit "color-66"))
      (darktooth-identifiers-2   '(:24bit "#DFE5C5" :8bit "color-102"))
      (darktooth-identifiers-3   '(:24bit "#D5E5C5" :8bit "color-94"))
      (darktooth-identifiers-4   '(:24bit "#CAE5C5" :8bit "color-137"))
      (darktooth-identifiers-5   '(:24bit "#C5E5CA" :8bit "color-66"))
      (darktooth-identifiers-6   '(:24bit "#C5E5D5" :8bit "color-102"))
      (darktooth-identifiers-7   '(:24bit "#C5E5DF" :8bit "color-94"))
      (darktooth-identifiers-8   '(:24bit "#C5DFE5" :8bit "color-137"))
      (darktooth-identifiers-9   '(:24bit "#C5D5E5" :8bit "color-66"))
      (darktooth-identifiers-10  '(:24bit "#C5CAE5" :8bit "color-102"))
      (darktooth-identifiers-11  '(:24bit "#CAC5E5" :8bit "color-94"))
      (darktooth-identifiers-12  '(:24bit "#D5C5E5" :8bit "color-137"))
      (darktooth-identifiers-13  '(:24bit "#DFC5E5" :8bit "color-66"))
      (darktooth-identifiers-14  '(:24bit "#E5C5DF" :8bit "color-102"))
      (darktooth-identifiers-15  '(:24bit "#E5C5D5" :8bit "color-94"))

      (darktooth-white           '(:24bit "#FFFFFF" :8bit "white"))
      (darktooth-black           '(:24bit "#000000" :8bit "black"))
      (darktooth-sienna          '(:24bit "#DD6F48" :8bit "sienna"))
      (darktooth-darkslategray4  '(:24bit "#528B8B" :8bit "DarkSlateGray4"))
      (darktooth-lightblue4      '(:24bit "#66999D" :8bit "LightBlue4"))
      (darktooth-burlywood4      '(:24bit "#BBAA97" :8bit "burlywood4"))
      (darktooth-aquamarine4     '(:24bit "#83A598" :8bit "aquamarine4"))
      (darktooth-turquoise4      '(:24bit "#61ACBB" :8bit "turquoise4"))
      )

  (custom-theme-set-faces
   'darktooth
   ;; UI
   `(default                                   ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0) :background ,(dt24bit darktooth-dark0) ))                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0) :background ,(dt8bit darktooth-dark0) ))
   `(cursor                                    ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-light0) ))                                                                                     (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-light0) ))
   `(link                                      ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_blue) :underline t ))                                                                   (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_blue) :underline t ))
   `(link-visited                              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_blue) :underline nil ))                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_blue) :underline nil ))

   `(mode-line                                 ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light1) :background ,(dt24bit darktooth-dark0_hard) :box nil ))                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light1) :background ,(dt8bit darktooth-dark0_hard) :box nil ))
   `(mode-line-inactive                        ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light4) :background ,(dt24bit darktooth-dark2) :box nil ))                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light4) :background ,(dt8bit darktooth-dark2) :box nil ))
   `(fringe                                    ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark0) ))                                                                                      (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark0) ))
   `(linum                                     ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark4) ))                                                                                      (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark4) ))
   `(hl-line                                   ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark_purple) ))                                                                                (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark_purple) ))
   `(region                                    ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-mid_blue) :distant-foreground ,(dt24bit darktooth-light0) ))                                   (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-mid_blue) :distant-foreground ,(dt8bit darktooth-light0) ))
   `(secondary-selection                       ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark_blue) ))                                                                                  (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark_blue) ))
   `(cua-rectangle                             ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-mid_blue) ))                                                                                   (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-mid_blue) ))
   `(header-line                               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-turquoise4) :background ,(dt24bit darktooth-dark0) :bold nil ))                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-turquoise4) :background ,(dt8bit darktooth-dark0) :bold nil ))
   `(minibuffer-prompt                         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_cyan) :background ,(dt24bit darktooth-dark0) :bold nil ))                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_cyan) :background ,(dt8bit darktooth-dark0) :bold nil ))
   `(shadow                                    ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark2) ))                                                                                      (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark2) ))

   ;; compilation messages (also used by several other modes)
   `(compilation-info                          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_aqua) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_aqua) ))
   `(compilation-mode-line-fail                ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_red) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_red) ))
   `(error                                     ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_orange) :bold t ))                                                                      (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_orange) :bold t ))
   `(success                                   ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_green) :bold t ))                                                                      (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_green) :bold t ))
   `(warning                                   ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_red) :bold t ))                                                                         (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_red) :bold t ))

   ;; Built-in syntax
   `(font-lock-builtin-face                    ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_orange) ))                                                                                      (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_orange) ))
   `(font-lock-constant-face                   ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-burlywood4) ))                                                                                         (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-burlywood4) ))
   `(font-lock-comment-face                    ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark4) ))                                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark4) ))
   `(font-lock-function-name-face              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light4) ))                                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light4) ))
   `(font-lock-keyword-face                    ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-sienna) ))                                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-sienna) ))
   `(font-lock-string-face                     ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-darkslategray4) ))                                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-darkslategray4) ))
   `(font-lock-variable-name-face              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-aquamarine4) ))                                                                                        (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-aquamarine4) ))
   `(font-lock-type-face                       ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-lightblue4) ))                                                                                         (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-lightblue4) ))
   `(font-lock-warning-face                    ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_red) :bold t ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_red) :bold t ))

   ;; whitespace-mode
   `(whitespace-space                          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark4) :background ,(dt24bit darktooth-dark0) ))                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark4) :background ,(dt8bit darktooth-dark0) ))
   `(whitespace-hspace                         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark4) :background ,(dt24bit darktooth-dark0) ))                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark4) :background ,(dt8bit darktooth-dark0) ))
   `(whitespace-tab                            ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark4) :background ,(dt24bit darktooth-dark0) ))                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark4) :background ,(dt8bit darktooth-dark0) ))
   `(whitespace-newline                        ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark4) :background ,(dt24bit darktooth-dark0) ))                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark4) :background ,(dt8bit darktooth-dark0) ))
   `(whitespace-trailing                       ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_red) :background ,(dt24bit darktooth-dark1) ))                                         (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_red) :background ,(dt8bit darktooth-dark1) ))
   `(whitespace-line                           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_red) :background ,(dt24bit darktooth-dark1) ))                                         (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_red) :background ,(dt8bit darktooth-dark1) ))
   `(whitespace-space-before-tab               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark4) :background ,(dt24bit darktooth-dark0) ))                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark4) :background ,(dt8bit darktooth-dark0) ))
   `(whitespace-indentation                    ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark4) :background ,(dt24bit darktooth-dark0) ))                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark4) :background ,(dt8bit darktooth-dark0) ))
   `(whitespace-empty                          ((((class color) (min-colors #xffffff)) :foreground nil :background nil ))                                                                                             (((class color) (min-colors #xff)) :foreground nil :background nil ))
   `(whitespace-space-after-tab                ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark4) :background ,(dt24bit darktooth-dark0) ))                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark4) :background ,(dt8bit darktooth-dark0) ))

   ;; RainbowDelimiters
   `(rainbow-delimiters-depth-1-face           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-delimiter-one) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-delimiter-one) ))
   `(rainbow-delimiters-depth-2-face           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-delimiter-two) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-delimiter-two) ))
   `(rainbow-delimiters-depth-3-face           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-delimiter-three) ))                                                                            (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-delimiter-three) ))
   `(rainbow-delimiters-depth-4-face           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-delimiter-four) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-delimiter-four) ))
   `(rainbow-delimiters-depth-5-face           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-delimiter-one) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-delimiter-one) ))
   `(rainbow-delimiters-depth-6-face           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-delimiter-two) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-delimiter-two) ))
   `(rainbow-delimiters-depth-7-face           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-delimiter-three) ))                                                                            (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-delimiter-three) ))
   `(rainbow-delimiters-depth-8-face           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-delimiter-four) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-delimiter-four) ))
   `(rainbow-delimiters-depth-9-face           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-delimiter-one) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-delimiter-one) ))
   `(rainbow-delimiters-depth-10-face          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-delimiter-two) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-delimiter-two) ))
   `(rainbow-delimiters-depth-11-face          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-delimiter-three) ))                                                                            (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-delimiter-three) ))
   `(rainbow-delimiters-depth-12-face          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-delimiter-four) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-delimiter-four) ))
   `(rainbow-delimiters-unmatched-face         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0) :background nil ))                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0) :background nil ))

   ;; RainbowIdentifiers
   `(rainbow-identifiers-identifier-1          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-identifiers-1) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-identifiers-1) ))
   `(rainbow-identifiers-identifier-2          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-identifiers-2) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-identifiers-2) ))
   `(rainbow-identifiers-identifier-3          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-identifiers-3) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-identifiers-3) ))
   `(rainbow-identifiers-identifier-4          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-identifiers-4) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-identifiers-4) ))
   `(rainbow-identifiers-identifier-5          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-identifiers-5) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-identifiers-5) ))
   `(rainbow-identifiers-identifier-6          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-identifiers-6) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-identifiers-6) ))
   `(rainbow-identifiers-identifier-7          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-identifiers-7) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-identifiers-7) ))
   `(rainbow-identifiers-identifier-8          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-identifiers-8) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-identifiers-8) ))
   `(rainbow-identifiers-identifier-9          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-identifiers-9) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-identifiers-9) ))
   `(rainbow-identifiers-identifier-10         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-identifiers-10) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-identifiers-10) ))
   `(rainbow-identifiers-identifier-11         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-identifiers-11) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-identifiers-11) ))
   `(rainbow-identifiers-identifier-12         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-identifiers-12) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-identifiers-12) ))
   `(rainbow-identifiers-identifier-13         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-identifiers-13) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-identifiers-13) ))
   `(rainbow-identifiers-identifier-14         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-identifiers-14) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-identifiers-14) ))
   `(rainbow-identifiers-identifier-15         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-identifiers-15) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-identifiers-15) ))

   ;; ido
   `(ido-indicator                             ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-bright_red) :foreground ,(dt24bit darktooth-bright_yellow) ))                                  (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-bright_red) :foreground ,(dt8bit darktooth-bright_yellow) ))
   `(ido-first-match                           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_cyan) :background ,(dt24bit darktooth-dark0_hard) ))                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_cyan) :background ,(dt8bit darktooth-dark0_hard) ))
   `(ido-only-match                            ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-darkslategray4) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-darkslategray4) ))
   `(ido-vertical-match-face                   ((((class color) (min-colors #xffffff)) :bold t ))                                                                                                                     (((class color) (min-colors #xff)) :bold t ))
   `(ido-vertical-only-match-face              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_cyan) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_cyan) ))
   `(ido-vertical-first-match-face             ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_cyan) :background ,(dt24bit darktooth-dark_blue) ))                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_cyan) :background ,(dt8bit darktooth-dark_blue) ))

   ;; linum-relative
   `(linum-relative-current-face               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light4) :background ,(dt24bit darktooth-dark1) ))                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light4) :background ,(dt8bit darktooth-dark1) ))

   ;; Highlight indentation mode
   `(highlight-indentation-current-column-face ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark4) ))                                                                                      (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark4) ))
   `(highlight-indentation-face                ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark1) ))                                                                                      (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark1) ))

   ;; highlight-numbers
   `(highlight-numbers-number                  ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_purple) :bold nil ))                                                                    (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_purple) :bold nil ))

   ;; highlight-symbol
   `(highlight-symbol-face                     ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_purple) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_purple) ))

   ;; Smartparens
   `(sp-pair-overlay-face                      ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark2) ))                                                                                      (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark2) ))
   `(sp-show-pair-match-face                   ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark2) ))                                                                                      (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark2) ))
   `(sp-show-pair-mismatch-face                ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-neutral_red) ))                                                                                (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-neutral_red) ))

   ;; AucTeX
   `(font-latex-math-face                      ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-lightblue4) ))                                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-lightblue4) ))
   `(font-latex-sectioning-5-face              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_green) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_green) ))
   `(font-latex-string-face                    ((((class color) (min-colors #xffffff)) :inherit font-lock-string-face ))                                                                                                      (((class color) (min-colors #xff)) :inherit font-lock-string-face ))
   `(font-latex-warning-face                   ((((class color) (min-colors #xffffff)) :inherit warning ))                                                                                                            (((class color) (min-colors #xff)) :inherit warning ))

   ;; elscreen
   `(elscreen-tab-background-face              ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark0) :box nil ))                                                                             (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark0) :box nil ))
   `(elscreen-tab-control-face                 ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_red) :background ,(dt24bit darktooth-dark2) :box nil :underline nil ))                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_red) :background ,(dt8bit darktooth-dark2) :box nil :underline nil ))
   `(elscreen-tab-current-screen-face          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark0) :background ,(dt24bit darktooth-dark4) :box nil ))                                      (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark0) :background ,(dt8bit darktooth-dark4) :box nil ))
   `(elscreen-tab-other-screen-face            ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light4) :background ,(dt24bit darktooth-dark2) :box nil :underline nil ))                      (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light4) :background ,(dt8bit darktooth-dark2) :box nil :underline nil ))

   ;; embrace
   `(embrace-help-pair-face                    ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_blue) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_blue) ))
   `(embrace-help-separator-face               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_orange) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_orange) ))
   `(embrace-help-key-face                     ((((class color) (min-colors #xffffff)) :weight bold ,(dt24bit darktooth-bright_aqua) ))                                                                               (((class color) (min-colors #xff)) :weight bold ,(dt8bit darktooth-bright_aqua) ))
   `(embrace-help-mark-func-face               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_cyan) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_cyan) ))

   ;; ag (The Silver Searcher)
   `(ag-hit-face                               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_blue) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_blue) ))
   `(ag-match-face                             ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_red) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_red) ))

   ;; Diffs
   `(diff-changed                              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light1) :background nil ))                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light1) :background nil ))
   `(diff-added                                ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_green) :background nil ))                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_green) :background nil ))
   `(diff-removed                              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_red) :background nil ))                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_red) :background nil ))
   `(diff-indicator-changed                    ((((class color) (min-colors #xffffff)) :inherit diff-changed ))                                                                                                       (((class color) (min-colors #xff)) :inherit diff-changed ))
   `(diff-indicator-added                      ((((class color) (min-colors #xffffff)) :inherit diff-added ))                                                                                                         (((class color) (min-colors #xff)) :inherit diff-added ))
   `(diff-indicator-removed                    ((((class color) (min-colors #xffffff)) :inherit diff-removed ))                                                                                                       (((class color) (min-colors #xff)) :inherit diff-removed ))

   ;; Diff-hl
   `(diff-hl-change                            ((((class color) (min-colors #xffffff)) :inherit diff-changed ))                                                                                                       (((class color) (min-colors #xff)) :inherit diff-changed ))
   `(diff-hl-delete                            ((((class color) (min-colors #xffffff)) :inherit diff-removed ))                                                                                                       (((class color) (min-colors #xff)) :inherit diff-removed ))
   `(diff-hl-insert                            ((((class color) (min-colors #xffffff)) :inherit diff-added ))                                                                                                         (((class color) (min-colors #xff)) :inherit diff-added ))
   `(diff-hl-unknown                           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark_aqua) ))                                                                                  (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark_aqua) ))

   `(js2-warning                               ((((class color) (min-colors #xffffff)) :underline (:color ,(dt24bit darktooth-bright_yellow) :style wave) ))                                                          (((class color) (min-colors #xff)) :underline (:color ,(dt8bit darktooth-bright_yellow) :style wave) ))
   `(js2-error                                 ((((class color) (min-colors #xffffff)) :underline (:color ,(dt24bit darktooth-bright_red) :style wave) ))                                                             (((class color) (min-colors #xff)) :underline (:color ,(dt8bit darktooth-bright_red) :style wave) ))
   `(js2-external-variable                     ((((class color) (min-colors #xffffff)) :underline (:color ,(dt24bit darktooth-bright_aqua) :style wave) ))                                                            (((class color) (min-colors #xff)) :underline (:color ,(dt8bit darktooth-bright_aqua) :style wave) ))
   `(js2-jsdoc-tag                             ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-medium) :background nil ))                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-medium) :background nil ))
   `(js2-jsdoc-type                            ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light4) :background nil ))                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light4) :background nil ))
   `(js2-jsdoc-value                           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light3) :background nil ))                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light3) :background nil ))
   `(js2-function-param                        ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_aqua) :background nil ))                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_aqua) :background nil ))
   `(js2-function-call                         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_blue) :background nil ))                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_blue) :background nil ))
   `(js2-instance-member                       ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_orange) :background nil ))                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_orange) :background nil ))
   `(js2-private-member                        ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_yellow) :background nil ))                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_yellow) :background nil ))
   `(js2-private-function-call                 ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_aqua) :background nil ))                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_aqua) :background nil ))
   `(js2-jsdoc-html-tag-name                   ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light4) :background nil ))                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light4) :background nil ))
   `(js2-jsdoc-html-tag-delimiter              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light3) :background nil ))                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light3) :background nil ))

   ;; Haskell
   `(haskell-interactive-face-compile-warning  ((((class color) (min-colors #xffffff)) :underline (:color ,(dt24bit darktooth-bright_yellow) :style wave) ))                                                          (((class color) (min-colors #xff)) :underline (:color ,(dt8bit darktooth-bright_yellow) :style wave) ))
   `(haskell-interactive-face-compile-error    ((((class color) (min-colors #xffffff)) :underline (:color ,(dt24bit darktooth-bright_red) :style wave) ))                                                             (((class color) (min-colors #xff)) :underline (:color ,(dt8bit darktooth-bright_red) :style wave) ))
   `(haskell-interactive-face-garbage          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark4) :background nil ))                                                                      (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark4) :background nil ))
   `(haskell-interactive-face-prompt           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0) :background nil ))                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0) :background nil ))
   `(haskell-interactive-face-result           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light3) :background nil ))                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light3) :background nil ))
   `(haskell-literate-comment-face             ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0) :background nil ))                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0) :background nil ))
   `(haskell-pragma-face                       ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-medium) :background nil ))                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-medium) :background nil ))
   `(haskell-constructor-face                  ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_aqua) :background nil ))                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_aqua) :background nil ))

   ;; org-mode
   `(org-agenda-date-today                     ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light2) :slant italic :weight bold ))                                                          (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light2) :slant italic :weight bold ))
   `(org-agenda-structure                      ((((class color) (min-colors #xffffff)) :inherit font-lock-comment-face ))                                                                                                     (((class color) (min-colors #xff)) :inherit font-lock-comment-face ))
   `(org-archived                              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0) :weight bold ))                                                                        (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0) :weight bold ))
   `(org-checkbox                              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light2) :background ,(dt24bit darktooth-dark0) :box (:line-width 1 :style released-button) ))  (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light2) :background ,(dt8bit darktooth-dark0) :box (:line-width 1 :style released-button) ))
   `(org-date                                  ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_blue) :underline t ))                                                                    (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_blue) :underline t ))
   `(org-deadline-announce                     ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_red) ))                                                                                  (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_red) ))
   `(org-done                                  ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_green) :bold t :weight bold ))                                                          (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_green) :bold t :weight bold ))
   `(org-formula                               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_yellow) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_yellow) ))
   `(org-headline-done                         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_green) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_green) ))
   `(org-hide                                  ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark0) ))                                                                                      (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark0) ))
   `(org-level-1                               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_orange) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_orange) ))
   `(org-level-2                               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_green) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_green) ))
   `(org-level-3                               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_blue) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_blue) ))
   `(org-level-4                               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_yellow) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_yellow) ))
   `(org-level-5                               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_aqua) ))                                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_aqua) ))
   `(org-level-6                               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_green) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_green) ))
   `(org-level-7                               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_red) ))                                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_red) ))
   `(org-level-8                               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_blue) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_blue) ))
   `(org-link                                  ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_yellow) :underline t ))                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_yellow) :underline t ))
   `(org-scheduled                             ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_green) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_green) ))
   `(org-scheduled-previously                  ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_red) ))                                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_red) ))
   `(org-scheduled-today                       ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_blue) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_blue) ))
   `(org-sexp-date                             ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_blue) :underline t ))                                                                   (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_blue) :underline t ))
   `(org-special-keyword                       ((((class color) (min-colors #xffffff)) :inherit font-lock-comment-face ))                                                                                                     (((class color) (min-colors #xff)) :inherit font-lock-comment-face ))
   `(org-table                                 ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_green) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_green) ))
   `(org-tag                                   ((((class color) (min-colors #xffffff)) :bold t :weight bold ))                                                                                                        (((class color) (min-colors #xff)) :bold t :weight bold ))
   `(org-time-grid                             ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_orange) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_orange) ))
   `(org-todo                                  ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_red) :weight bold :bold t ))                                                            (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_red) :weight bold :bold t ))
   `(org-upcoming-deadline                     ((((class color) (min-colors #xffffff)) :inherit font-lock-keyword-face ))                                                                                                     (((class color) (min-colors #xff)) :inherit font-lock-keyword-face ))
   `(org-warning                               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_red) :weight bold :underline nil :bold t ))                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_red) :weight bold :underline nil :bold t ))
   `(org-column                                ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark0) ))                                                                                      (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark0) ))
   `(org-column-title                          ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark0_hard) :underline t :weight bold ))                                                       (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark0_hard) :underline t :weight bold ))
   `(org-mode-line-clock                       ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light2) :background ,(dt24bit darktooth-dark0) ))                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light2) :background ,(dt8bit darktooth-dark0) ))
   `(org-mode-line-clock-overrun               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-black) :background ,(dt24bit darktooth-bright_red) ))                                          (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-black) :background ,(dt8bit darktooth-bright_red) ))
   `(org-ellipsis                              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_yellow) :underline t ))                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_yellow) :underline t ))
   `(org-footnote                              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_aqua) :underline t ))                                                                    (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_aqua) :underline t ))

   ;; powerline
   `(powerline-active1                         ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark2) :inherit mode-line ))                                                                   (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark2) :inherit mode-line ))
   `(powerline-active2                         ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark1) :inherit mode-line ))                                                                   (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark1) :inherit mode-line ))
   `(powerline-inactive1                       ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-medium) :inherit mode-line-inactive ))                                                         (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-medium) :inherit mode-line-inactive ))
   `(powerline-inactive2                       ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark2) :inherit mode-line-inactive ))                                                          (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark2) :inherit mode-line-inactive ))

   ;; smart-mode-line
   ;; use (setq sml/theme nil) to enable Darktooth for sml
   `(sml/modes                                 ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0_hard) :weight bold :bold t ))                                                           (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0_hard) :weight bold :bold t ))
   `(sml/minor-modes                           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_orange) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_orange) ))
   `(sml/filename                              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0_hard) :weight bold :bold t ))                                                           (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0_hard) :weight bold :bold t ))
   `(sml/prefix                                ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_blue) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_blue) ))
   `(sml/git                                   ((((class color) (min-colors #xffffff)) :inherit sml/prefix ))                                                                                                         (((class color) (min-colors #xff)) :inherit sml/prefix ))
   `(sml/process                               ((((class color) (min-colors #xffffff)) :inherit sml/prefix ))                                                                                                         (((class color) (min-colors #xff)) :inherit sml/prefix ))
   `(sml/sudo                                  ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark_orange) :weight bold ))                                                                   (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark_orange) :weight bold ))
   `(sml/read-only                             ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_blue) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_blue) ))
   `(sml/outside-modified                      ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_blue) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_blue) ))
   `(sml/modified                              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_blue) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_blue) ))
   `(sml/vc                                    ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_green) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_green) ))
   `(sml/vc-edited                             ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_green) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_green) ))
   `(sml/charging                              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_aqua) ))                                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_aqua) ))
   `(sml/discharging                           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_aqua) :weight bold ))                                                                    (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_aqua) :weight bold ))
   `(sml/col-number                            ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_orange) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_orange) ))
   `(sml/position-percentage                   ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_aqua) ))                                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_aqua) ))

   ;; Matches and Isearch
   `(lazy-highlight                            ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0) :background ,(dt24bit darktooth-dark2) ))                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0) :background ,(dt8bit darktooth-dark2) ))
   `(highlight                                 ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0_hard) :background ,(dt24bit darktooth-faded_blue) ))                                    (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0_hard) :background ,(dt8bit darktooth-faded_blue) ))
   `(match                                     ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0) :background ,(dt24bit darktooth-dark2) ))                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0) :background ,(dt8bit darktooth-dark2) ))
   `(isearch                                   ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0) :background ,(dt24bit darktooth-faded_aqua) ))                                         (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0) :background ,(dt8bit darktooth-faded_aqua) ))
   `(isearch-fail                              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0_hard) :background ,(dt24bit darktooth-faded_red) ))                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0_hard) :background ,(dt8bit darktooth-faded_red) ))
   `(show-paren-match                          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0) :background ,(dt24bit darktooth-faded_blue) ))                                         (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0) :background ,(dt8bit darktooth-faded_blue) ))
   `(show-paren-mismatch                       ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0_hard) :background ,(dt24bit darktooth-faded_red) ))                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0_hard) :background ,(dt8bit darktooth-faded_red) ))
   `(anzu-mode-line                            ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0) :height 100 :background ,(dt24bit darktooth-faded_blue) ))                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0) :height 100 :background ,(dt8bit darktooth-faded_blue) ))

   ;; Anzu
   `(anzu-match-1                              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark0) :background ,(dt24bit darktooth-bright_green) ))                                        (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark0) :background ,(dt8bit darktooth-bright_green) ))
   `(anzu-match-2                              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark0) :background ,(dt24bit darktooth-bright_yellow) ))                                       (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark0) :background ,(dt8bit darktooth-bright_yellow) ))
   `(anzu-match-3                              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark0) :background ,(dt24bit darktooth-bright_cyan) ))                                         (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark0) :background ,(dt8bit darktooth-bright_cyan) ))
   `(anzu-replace-highlight                    ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark_aqua) ))                                                                                  (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark_aqua) ))
   `(anzu-replace-to                           ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark_cyan) ))                                                                                  (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark_cyan) ))

   ;; Avy
   `(avy-lead-face-0                           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_blue)  ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_blue)  ))
   `(avy-lead-face-1                           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_aqua)  ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_aqua)  ))
   `(avy-lead-face-2                           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_purple)  ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_purple)  ))
   `(avy-lead-face                             ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_red)  ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_red)  ))
   `(avy-background-face                       ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark3)  ))                                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark3)  ))
   `(avy-goto-char-timer-face                  ((((class color) (min-colors #xffffff)) :inherit    highlight  ))                                                                                                      (((class color) (min-colors #xff)) :inherit    highlight  ))

   ;; Popup
   `(popup-face                                ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0) :background ,(dt24bit darktooth-dark1) ))                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0) :background ,(dt8bit darktooth-dark1) ))
   `(popup-menu-mouse-face                     ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0) :background ,(dt24bit darktooth-faded_blue) ))                                         (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0) :background ,(dt8bit darktooth-faded_blue) ))
   `(popup-menu-selection-face                 ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0) :background ,(dt24bit darktooth-faded_blue) ))                                         (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0) :background ,(dt8bit darktooth-faded_blue) ))
   `(popup-tip-face                            ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0_hard) :background ,(dt24bit darktooth-dark_aqua) ))                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0_hard) :background ,(dt8bit darktooth-dark_aqua) ))
   ;; Use tip colors for the pos-tip color vars (see below)

   ;; Inherit ac-dabbrev from popup menu face
   `(ac-dabbrev-menu-face                      ((((class color) (min-colors #xffffff)) :inherit popup-face ))                                                                                                         (((class color) (min-colors #xff)) :inherit popup-face ))
   `(ac-dabbrev-selection-face                 ((((class color) (min-colors #xffffff)) :inherit popup-menu-selection-face ))                                                                                          (((class color) (min-colors #xff)) :inherit popup-menu-selection-face ))

   ;; sh mode
   `(sh-heredoc                                ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-darkslategray4) :background nil ))                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-darkslategray4) :background nil ))
   `(sh-quoted-exec                            ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-darkslategray4) :background nil ))                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-darkslategray4) :background nil ))

   ;; Company Mode
   `(company-echo                              ((((class color) (min-colors #xffffff)) :inherit company-echo-common ))                                                                                                (((class color) (min-colors #xff)) :inherit company-echo-common ))
   `(company-echo-common                       ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_blue) :background nil ))                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_blue) :background nil ))
   `(company-preview-common                    ((((class color) (min-colors #xffffff)) :underline ,(dt24bit darktooth-light1) ))                                                                                      (((class color) (min-colors #xff)) :underline ,(dt8bit darktooth-light1) ))
   `(company-preview                           ((((class color) (min-colors #xffffff)) :inherit company-preview-common ))                                                                                             (((class color) (min-colors #xff)) :inherit company-preview-common ))
   `(company-preview-search                    ((((class color) (min-colors #xffffff)) :inherit company-preview-common ))                                                                                             (((class color) (min-colors #xff)) :inherit company-preview-common ))
   `(company-template-field                    ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_blue) :background nil :underline ,(dt24bit darktooth-dark_blue) ))                      (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_blue) :background nil :underline ,(dt8bit darktooth-dark_blue) ))
   `(company-scrollbar-fg                      ((((class color) (min-colors #xffffff)) :foreground nil :background ,(dt24bit darktooth-dark2) ))                                                                      (((class color) (min-colors #xff)) :foreground nil :background ,(dt8bit darktooth-dark2) ))
   `(company-scrollbar-bg                      ((((class color) (min-colors #xffffff)) :foreground nil :background ,(dt24bit darktooth-dark3) ))                                                                      (((class color) (min-colors #xff)) :foreground nil :background ,(dt8bit darktooth-dark3) ))
   `(company-tooltip                           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0_hard) :background ,(dt24bit darktooth-dark1) ))                                         (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0_hard) :background ,(dt8bit darktooth-dark1) ))
   `(company-preview-common                    ((((class color) (min-colors #xffffff)) :inherit font-lock-comment-face ))                                                                                                     (((class color) (min-colors #xff)) :inherit font-lock-comment-face ))
   `(company-tooltip-common                    ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0) :background ,(dt24bit darktooth-dark1) ))                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0) :background ,(dt8bit darktooth-dark1) ))
   `(company-tooltip-annotation                ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_blue) :background ,(dt24bit darktooth-dark1) ))                                         (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_blue) :background ,(dt8bit darktooth-dark1) ))
   `(company-tooltip-common-selection          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0) :background ,(dt24bit darktooth-faded_blue) ))                                         (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0) :background ,(dt8bit darktooth-faded_blue) ))
   `(company-tooltip-mouse                     ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark0) :background ,(dt24bit darktooth-bright_blue) ))                                         (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark0) :background ,(dt8bit darktooth-bright_blue) ))
   `(company-tooltip-selection                 ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0) :background ,(dt24bit darktooth-faded_blue) ))                                         (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0) :background ,(dt8bit darktooth-faded_blue) ))

   ;; Helm
   `(helm-M-x-key                              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_orange) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_orange) ))
   `(helm-action                               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-white) :underline t ))                                                                         (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-white) :underline t ))
   `(helm-bookmark-addressbook                 ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_red) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_red) ))
   `(helm-bookmark-directory                   ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_purple) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_purple) ))
   `(helm-bookmark-file                        ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_blue) ))                                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_blue) ))
   `(helm-bookmark-gnus                        ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_purple) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_purple) ))
   `(helm-bookmark-info                        ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-turquoise4) ))                                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-turquoise4) ))
   `(helm-bookmark-man                         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-sienna) ))                                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-sienna) ))
   `(helm-bookmark-w3m                         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_yellow) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_yellow) ))
   `(helm-buffer-directory                     ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-white) :background ,(dt24bit darktooth-bright_blue) ))                                         (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-white) :background ,(dt8bit darktooth-bright_blue) ))
   `(helm-buffer-not-saved                     ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_red) ))                                                                                  (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_red) ))
   `(helm-buffer-process                       ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-burlywood4) ))                                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-burlywood4) ))
   `(helm-buffer-saved-out                     ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_red) ))                                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_red) ))
   `(helm-buffer-size                          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_purple) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_purple) ))
   `(helm-candidate-number                     ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_green) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_green) ))
   `(helm-ff-directory                         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_purple) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_purple) ))
   `(helm-ff-executable                        ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-turquoise4) ))                                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-turquoise4) ))
   `(helm-ff-file                              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-sienna) ))                                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-sienna) ))
   `(helm-ff-invalid-symlink                   ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-white) :background ,(dt24bit darktooth-bright_red) ))                                          (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-white) :background ,(dt8bit darktooth-bright_red) ))
   `(helm-ff-prefix                            ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-black) :background ,(dt24bit darktooth-neutral_yellow) ))                                      (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-black) :background ,(dt8bit darktooth-neutral_yellow) ))
   `(helm-ff-symlink                           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_orange) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_orange) ))
   `(helm-grep-cmd-line                        ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_green) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_green) ))
   `(helm-grep-file                            ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_purple) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_purple) ))
   `(helm-grep-finish                          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-turquoise4) ))                                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-turquoise4) ))
   `(helm-grep-lineno                          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_orange) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_orange) ))
   `(helm-grep-match                           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_yellow) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_yellow) ))
   `(helm-grep-running                         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_red) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_red) ))
   `(helm-header                               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-aquamarine4) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-aquamarine4) ))
   `(helm-helper                               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-aquamarine4) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-aquamarine4) ))
   `(helm-history-deleted                      ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-black) :background ,(dt24bit darktooth-bright_red) ))                                          (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-black) :background ,(dt8bit darktooth-bright_red) ))
   `(helm-history-remote                       ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_red) ))                                                                                  (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_red) ))
   `(helm-lisp-completion-info                 ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_orange) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_orange) ))
   `(helm-lisp-show-completion                 ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_red) ))                                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_red) ))
   `(helm-locate-finish                        ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-white) :background ,(dt24bit darktooth-aquamarine4) ))                                         (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-white) :background ,(dt8bit darktooth-aquamarine4) ))
   `(helm-match                                ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_orange) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_orange) ))
   `(helm-moccur-buffer                        ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_aqua) :underline t ))                                                                   (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_aqua) :underline t ))
   `(helm-prefarg                              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-turquoise4) ))                                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-turquoise4) ))
   `(helm-selection                            ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-white) :background ,(dt24bit darktooth-dark2) ))                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-white) :background ,(dt8bit darktooth-dark2) ))
   `(helm-selection-line                       ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-white) :background ,(dt24bit darktooth-dark2) ))                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-white) :background ,(dt8bit darktooth-dark2) ))
   `(helm-separator                            ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_red) ))                                                                                  (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_red) ))
   `(helm-source-header                        ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light2) :background ,(dt24bit darktooth-dark1) ))                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light2) :background ,(dt8bit darktooth-dark1) ))
   `(helm-visible-mark                         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-black) :background ,(dt24bit darktooth-light3) ))                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-black) :background ,(dt8bit darktooth-light3) ))

   ;; column-marker
   `(column-marker-1                           ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-faded_blue) ))                                                                                 (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-faded_blue) ))
   `(column-marker-2                           ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-faded_purple) ))                                                                               (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-faded_purple) ))
   `(column-marker-3                           ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-faded_cyan) ))                                                                                 (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-faded_cyan) ))

   ;; vline
   `(vline                                     ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark_aqua) ))                                                                                  (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark_aqua) ))
   `(vline-visual                              ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark_aqua) ))                                                                                  (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark_aqua) ))

   ;; col-highlight
   `(col-highlight                             ((((class color) (min-colors #xffffff)) :inherit vline ))                                                                                                              (((class color) (min-colors #xff)) :inherit vline ))

   ;; Column-enforce-mode
   `(column-enforce-face                       ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark4) :background ,(dt24bit darktooth-dark_red) ))                                            (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark4) :background ,(dt8bit darktooth-dark_red) ))

   ;; hydra - Hydra color names
   `(hydra-face-red                            ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_red) ))                                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_red) ))
   `(hydra-face-blue                           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_blue) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_blue) ))
   `(hydra-face-pink                           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-identifiers-15) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-identifiers-15) ))
   `(hydra-face-amaranth                       ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_purple) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_purple) ))
   `(hydra-face-teal                           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_cyan) ))                                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_cyan) ))

   ;; ivy/swiper
   `(ivy-current-match                         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0) :background ,(dt24bit darktooth-faded_blue) ))                                         (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0) :background ,(dt8bit darktooth-faded_blue) ))
   `(ivy-minibuffer-match-face-1               ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark1) ))                                                                                      (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark1) ))
   `(ivy-minibuffer-match-face-2               ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark2) ))                                                                                      (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark2) ))
   `(ivy-minibuffer-match-face-3               ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-faded_aqua) ))                                                                                 (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-faded_aqua) ))
   `(ivy-minibuffer-match-face-4               ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-faded_purple) ))                                                                               (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-faded_purple) ))
   `(ivy-confirm-face                          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_green) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_green) ))
   `(ivy-match-required-face                   ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_red) ))                                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_red) ))
   `(ivy-remote                                ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_blue) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_blue) ))

   ;;Smerge
   ;; TODO: smerge-base, smerge-refined-changed
   `(smerge-mine                               ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-mid_purple) ))                                                                                 (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-mid_purple) ))
   `(smerge-other                              ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-mid_blue) ))                                                                                   (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-mid_blue) ))
   `(smerge-markers                            ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark0_soft) ))                                                                                 (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark0_soft) ))
   `(smerge-refined-added                      ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark_green) ))                                                                                 (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark_green) ))
   `(smerge-refined-removed                    ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark_red) ))                                                                                   (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark_red) ))

   ;; Magit
   `(magit-branch                              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-turquoise4) :background nil ))                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-turquoise4) :background nil ))
   `(magit-branch-local                        ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-turquoise4) :background nil ))                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-turquoise4) :background nil ))
   `(magit-branch-remote                       ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-aquamarine4) :background nil ))                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-aquamarine4) :background nil ))
   `(magit-cherry-equivalent                   ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_orange) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_orange) ))
   `(magit-cherry-unmatched                    ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_purple) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_purple) ))
   `(magit-diff-context                        ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark3) :background nil ))                                                                      (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark3) :background nil ))
   `(magit-diff-context-highlight              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark4) :background ,(dt24bit darktooth-dark0_soft) ))                                          (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark4) :background ,(dt8bit darktooth-dark0_soft) ))
   `(magit-diff-added                          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_green) :background ,(dt24bit darktooth-mid_green) ))                                    (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_green) :background ,(dt8bit darktooth-mid_green) ))
   `(magit-diff-added-highlight                ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_green) :background ,(dt24bit darktooth-mid_green) ))                                    (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_green) :background ,(dt8bit darktooth-mid_green) ))
   `(magit-diff-removed                        ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_red) :background ,(dt24bit darktooth-mid_red) ))                                        (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_red) :background ,(dt8bit darktooth-mid_red) ))
   `(magit-diff-removed-highlight              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_red) :background ,(dt24bit darktooth-mid_red) ))                                        (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_red) :background ,(dt8bit darktooth-mid_red) ))
   `(magit-diff-add                            ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_green) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_green) ))
   `(magit-diff-del                            ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_red) ))                                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_red) ))
   `(magit-diff-file-header                    ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_blue) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_blue) ))
   `(magit-diff-hunk-header                    ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_aqua) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_aqua) ))
   `(magit-diff-merge-current                  ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark_yellow) ))                                                                                (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark_yellow) ))
   `(magit-diff-merge-diff3-separator          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_orange) :weight bold ))                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_orange) :weight bold ))
   `(magit-diff-merge-proposed                 ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark_green) ))                                                                                 (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark_green) ))
   `(magit-diff-merge-separator                ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_orange) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_orange) ))
   `(magit-diff-none                           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-medium) ))                                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-medium) ))
   `(magit-item-highlight                      ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark1) :weight normal ))                                                                       (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark1) :weight normal ))
   `(magit-item-mark                           ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark0) ))                                                                                      (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark0) ))
   `(magit-key-mode-args-face                  ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light4) ))                                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light4) ))
   `(magit-key-mode-button-face                ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_orange) :weight bold ))                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_orange) :weight bold ))
   `(magit-key-mode-header-face                ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light4) :weight bold ))                                                                        (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light4) :weight bold ))
   `(magit-key-mode-switch-face                ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-turquoise4) :weight bold ))                                                                    (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-turquoise4) :weight bold ))
   `(magit-log-author                          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_aqua) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_aqua) ))
   `(magit-log-date                            ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_orange) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_orange) ))
   `(magit-log-graph                           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light1) ))                                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light1) ))
   `(magit-log-head-label-bisect-bad           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_red) ))                                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_red) ))
   `(magit-log-head-label-bisect-good          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_green) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_green) ))
   `(magit-log-head-label-bisect-skip          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_yellow) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_yellow) ))
   `(magit-log-head-label-default              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_blue) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_blue) ))
   `(magit-log-head-label-head                 ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0) :background ,(dt24bit darktooth-dark_aqua) ))                                          (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0) :background ,(dt8bit darktooth-dark_aqua) ))
   `(magit-log-head-label-local                ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_blue) :weight bold ))                                                                    (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_blue) :weight bold ))
   `(magit-log-head-label-patches              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_orange) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_orange) ))
   `(magit-log-head-label-remote               ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_blue) :weight bold ))                                                                  (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_blue) :weight bold ))
   `(magit-log-head-label-tags                 ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_aqua) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_aqua) ))
   `(magit-log-head-label-wip                  ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_red) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_red) ))
   `(magit-log-message                         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light1) ))                                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light1) ))
   `(magit-log-reflog-label-amend              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_blue) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_blue) ))
   `(magit-log-reflog-label-checkout           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_yellow) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_yellow) ))
   `(magit-log-reflog-label-cherry-pick        ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_red) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_red) ))
   `(magit-log-reflog-label-commit             ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_green) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_green) ))
   `(magit-log-reflog-label-merge              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_green) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_green) ))
   `(magit-log-reflog-label-other              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_red) ))                                                                                  (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_red) ))
   `(magit-log-reflog-label-rebase             ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_blue) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_blue) ))
   `(magit-log-reflog-label-remote             ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_orange) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_orange) ))
   `(magit-log-reflog-label-reset              ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_yellow) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_yellow) ))
   `(magit-log-sha1                            ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_orange) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_orange) ))
   `(magit-process-ng                          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_red) :weight bold ))                                                                    (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_red) :weight bold ))
   `(magit-process-ok                          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_green) :weight bold ))                                                                  (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_green) :weight bold ))
   `(magit-section-heading                     ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light2) :background ,(dt24bit darktooth-dark_blue) ))                                          (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light2) :background ,(dt8bit darktooth-dark_blue) ))
   `(magit-signature-bad                       ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_red) :weight bold ))                                                                    (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_red) :weight bold ))
   `(magit-signature-good                      ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_green) :weight bold ))                                                                  (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_green) :weight bold ))
   `(magit-signature-none                      ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_red) ))                                                                                  (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_red) ))
   `(magit-signature-untrusted                 ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_purple) :weight bold ))                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_purple) :weight bold ))
   `(magit-tag                                 ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-darkslategray4) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-darkslategray4) ))
   `(magit-whitespace-warning-face             ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-faded_red) ))                                                                                  (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-faded_red) ))
   `(magit-bisect-bad                          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_red) ))                                                                                  (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_red) ))
   `(magit-bisect-good                         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_green) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_green) ))
   `(magit-bisect-skip                         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light2)))
   `(magit-blame-date                          ((((class color) (min-colors #xffffff)) :inherit magit-blame-heading  ))                                                                                               (((class color) (min-colors #xff)) :inherit magit-blame-heading ))
   `(magit-blame-name                          ((((class color) (min-colors #xffffff)) :inherit magit-blame-heading ))                                                                                                (((class color) (min-colors #xff)) :inherit magit-blame-heading ))
   `(magit-blame-hash                          ((((class color) (min-colors #xffffff)) :inherit magit-blame-heading ))                                                                                                (((class color) (min-colors #xff)) :inherit magit-blame-heading ))
   `(magit-blame-summary                       ((((class color) (min-colors #xffffff)) :inherit magit-blame-heading ))                                                                                                (((class color) (min-colors #xff)) :inherit magit-blame-heading ))
   `(magit-blame-heading                       ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark1) :foreground ,(dt24bit darktooth-light0) ))                                              (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark1) :foreground ,(dt8bit darktooth-light0) ))
   `(magit-sequence-onto                       ((((class color) (min-colors #xffffff)) :inherit magit-sequence-done ))                                                                                                (((class color) (min-colors #xff)) :inherit magit-sequence-done ))
   `(magit-sequence-done                       ((((class color) (min-colors #xffffff)) :inherit magit-hash ))                                                                                                         (((class color) (min-colors #xff)) :inherit magit-hash ))
   `(magit-sequence-drop                       ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_red) ))                                                                                  (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_red) ))
   `(magit-sequence-head                       ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-faded_cyan) ))                                                                                 (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-faded_cyan) ))
   `(magit-sequence-part                       ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_yellow) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_yellow) ))
   `(magit-sequence-stop                       ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-bright_aqua) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-bright_aqua) ))
   `(magit-sequence-pick                       ((((class color) (min-colors #xffffff)) :inherit default ))                                                                                                            (((class color) (min-colors #xff)) :inherit default ))
   `(magit-filename                            ((((class color) (min-colors #xffffff)) :weight normal ))                                                                                                              (((class color) (min-colors #xff)) :weight normal ))
   `(magit-refname-wip                         ((((class color) (min-colors #xffffff)) :inherit magit-refname ))                                                                                                      (((class color) (min-colors #xff)) :inherit magit-refname ))
   `(magit-refname-stash                       ((((class color) (min-colors #xffffff)) :inherit magit-refname ))                                                                                                      (((class color) (min-colors #xff)) :inherit magit-refname ))
   `(magit-refname                             ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light2) ))                                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light2) ))
   `(magit-head                                ((((class color) (min-colors #xffffff)) :inherit magit-branch-local ))                                                                                                 (((class color) (min-colors #xff)) :inherit magit-branch-local ))
   `(magit-popup-disabled-argument             ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light4) ))                                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light4) ))

   ;; Term
   `(term-color-black                          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark1) ))                                                                                      (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark1) ))
   `(term-color-blue                           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_blue) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_blue) ))
   `(term-color-cyan                           ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_cyan) ))                                                                               (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_cyan) ))
   `(term-color-green                          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_green) ))                                                                              (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_green) ))
   `(term-color-magenta                        ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_purple) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_purple) ))
   `(term-color-red                            ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_red) ))                                                                                (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_red) ))
   `(term-color-white                          ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light1) ))                                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light1) ))
   `(term-color-yellow                         ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-neutral_yellow) ))                                                                             (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-neutral_yellow) ))
   `(term-default-fg-color                     ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-light0) ))                                                                                     (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-light0) ))
   `(term-default-bg-color                     ((((class color) (min-colors #xffffff)) :background ,(dt24bit darktooth-dark0)) ))                                                                                     (((class color) (min-colors #xff)) :background ,(dt8bit darktooth-dark0) ))

  ;; Elfeed
  `(elfeed-search-date-face                    ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark1) ))                                                                                      (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark1) ))
  `(elfeed-search-feed-face                    ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark1) ))                                                                                      (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark1) ))
  `(elfeed-search-tag-face                     ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark0) ))                                                                                      (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark0) ))
  `(elfeed-search-title-face                   ((((class color) (min-colors #xffffff)) :foreground ,(dt24bit darktooth-dark0) ))                                                                                      (((class color) (min-colors #xff)) :foreground ,(dt8bit darktooth-dark0) ))
  )

  (custom-theme-set-variables
   'darktooth

   `(pos-tip-foreground-color ,(dt24bit darktooth-light0_hard))
   `(pos-tip-background-color ,(dt24bit darktooth-dark_aqua))

   `(ansi-color-names-vector ["#3C3836"
                              "#FB4934"
                              "#B8BB26"
                              "#FABD2F"
                              "#83A598"
                              "#D3869B"
                              "#8EC07C"
                              "#EBDBB2"]))
  )

;;;###autoload
(and load-file-name
     (boundp 'custom-theme-load-path)
     (add-to-list 'custom-theme-load-path
                  (file-name-as-directory
                   (file-name-directory load-file-name))))

(provide-theme 'darktooth)

;; Local Variables:
;; eval: (when (fboundp 'rainbow-mode) (rainbow-mode 1))
;; End:

;;; darktooth-theme.el ends here
